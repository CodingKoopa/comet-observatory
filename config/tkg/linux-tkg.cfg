# linux-TkG config file
# shellcheck disable=2034
# shellcheck disable=2148

# This is my TkG Linux kernel configuration. I have benchmarked some of these options to determine
# what works for my hardware. My benchmarking process goes in "rounds". Round 1 is a baseline round
# where each CPU scheduler's performance is measured. In this round, there are "default" values
# assigned for the variables we haven't yet tested, designated by "Value for earlier rounds". As the
# rounds proceed, and optimal values are found, those optimal values are then used, designated by
# "Using $value for further tests."

# The benchmarking results that go with this can be found here:
# https://openbenchmarking.org/result/2007161-CODI-TKGKERN16
# The same results, but without DiRT, Unigine, and x264 can be found here:
# https://openbenchmarking.org/result/2007163-CODI-TKGKERN85
# The reason why this may be desireable is that:
#   - DiRT's measure of average FPS may be misleading.
#   - Unigine isn't really important (as a GPU oriented benchmark, there were very little
# differences exposed with this CPU-side testing).
#   - x264 has produced some misleading results. It seems that 3 runs is too small of a sample size.

# Any values in this configuration that are commented out either due to there being no need to
# deviate from the default in customization.cfg, or because they are not applicable to the current
# CPU scheduler. All of the original comments from the Frogging Family repo have been stripped, to
# remove the burden of updating them here (and, likewise, to avoid having outdated information).

# _distro=""
_version="5.13"

#### MISC OPTIONS ####

# _EXT_CONFIG_PATH=""
# _NUKR=""
# _git_mirror=""
# CUSTOM_GCC_PATH=""
# CUSTOM_LLVM_PATH=""
_OPTIPROFILE="1"
_force_all_threads="false"
# _noccache=""
_modprobeddb="true"
# _modprobeddb_db_path=""
_menunconfig="false"
# _diffconfig=""
# _diffconfig_name=""

#### KERNEL OPTIONS ####

# _configfile=
_debugdisable="true"
# _config_expert=""
_compiler="gcc"
# TODO
_lto_mode="no"
# _STRIP=""
######################
# ↓ tkgmark variable ↓
# Benchmark Round 1:
# Tested values: pds (PDS), muqss (MuQSS), and bmq (BMQ).
#   - PDS excels at pgbench, is average on most, poor on DiRT Rally.
#   - MuQSS excels on DiRT, is average on most, poor on x264.
#   - BMQ does average for most, poor on on pgbench.
# PDS and MuQSS show the most promise, and will continue to be tested.
_cpusched="pds"
# _compiler=""
######################
######################
# ↓ tkgmark variable ↓
# Benchmark Round 2:
# Tested values: 0 (no yield), 1 (yield to better priority/deadline tasks).
# Value for earlier rounds: 1.
#   - On PDS, yield type yields no difference within a margin of error, this likely doesn't really
# matter for PDS. Yield to better priority technically does win, so: Using 1 for further tests.
#   - On MuQSS, no yield consistently provides the best results. Using 0 for further tests.
_sched_yield_type="0"
######################
######################
# ↓ tkgmark variable ↓
# Not benchmarked.
_rr_interval="default"
######################
_ftracedisable="true"
# _numadisable=""
# _misc_adds=""
######################
# ↓ tkgmark variable ↓
# Benchmark Round 3:
# Tested values: 0 (periodic ticks), 1 (full tickless), 2 (tickless idle).
# Value for earlier rounds: 0.
#   - On PDS, for all but DiRT and Unigine, the tickless value yields no significant difference, but
# periodic ticks wins by a little bit. Full tickless is very close to tickless idle, but generally
# wins. Using 0 for future tests, but noting that 1 gives DiRT a boost of about 3 FPS.
#     - Deviating from what has been established for "further tests", when no yield (0) is being
# used, PDS can see massive gains when using full tickless with some tasks. This is reflected in
# pgbench the most, whereas DiRT suffers in this configuration.
#   - On MuQSS, for all but DiRT, the tickless value yields no significant difference, but periodic
# ticks wins by a little bit. For DiRT in particular, periodic ticks actually give rise to rather
# large FPS gains. Fill tickless and tickless idle are close, but tickless idle performs marginally
# better. Using 0 for future tests.
_tickless="0"
######################
_acs_override="false"
_bcachefs="false"
# _fsync=""
# _futex2=""
_winesync="true"
_anbox="false"
# _zenify=""
# _compileroptlevel="2"
_processor_opt="zen"
######################
# ↓ tkgmark variable ↓
# Benchmark Round 7:
# Value for earlier rounds: false.
#   - For all but x264, compulsory IRQ threading worsens performance. Using false for future tests.
# This feature is meant for debugging, so no surprises here. See: https://lwn.net/Articles/429690/.
_irq_threading="false"
######################
######################
# ↓ tkgmark variable ↓
# Benchmark Round 6:
# Value for earlier rounds: true.
# Tested values: true, false.
#   - On PDS, for all but DiRT, Unigine and pgbench, SMT aware nice priority results in better
# performance. Using true for future tests.
#   - On MuQSS, for all but x264 and compilation, SMT aware nice priority results in worse
# performance, but it was much more closer than with PDS. Results in favor of disabling this were
# still very inconsistent, so, using true for future tests.
# In applications which scale up easily, particularly Blender, there are small gains to be had in
# disabling this. In most other cases, disabling this will make results less consistent, potentially
# worse.
_smt_nice="true"
# _cacule_rdb=""
# _cacule_rdb_interval=""
######################
# _random_trust_cpu=""
######################
# ↓ tkgmark variable ↓
# Value for earlier rounds: none, smt, mc-llc, all.
# Benchmark Round 8:
# Tested values: true, false.
#   - There really isn't an immediate clear winner here. With DiRT and Blender, smt does the best,
# with noticeable average FPS gains with the former. none is a very fair option, with no outstanding
# deficits. All does pretty poorly on DiRT and pgbench, okay on everything else. There is no clear
# advantage to using mc-llc, with mediocre-to-bad results.
_runqueue_sharing="mc-llc"
######################
######################
# ↓ tkgmark variable ↓
# Benchmark Round 4:
# Tested values: 100 (100Hz), 500 (500Hz) for both. Add 1000 (1000Hz) for PDS).
# Value for earlier rounds: 500 on PDS, 100 on MuQSS.
#   - On PDS, 500 generally provides the best results. Using 500 for further tests, but
# noting that 1000 gives DiRT a boost of about 2 FPS.
#   - On MuQSS, 100 consistently provides the best results. Using 100 for further tests.
_timer_freq="500"
######################
_default_cpu_gov="performance"
# TODO
# _aggressive_ondemand="true" # ondemand Dependent
# TODO
# _tcp_cong_alg=
# _custom_commandline=""

#### SPESHUL OPTION ####

# _custom_pkgbase=""
# _kernel_localversion=""
# _zfsfix=""

#### USER PATCHES ####

# _community_patches="async_buffered_reads.mypatch"

# _user_patches=""
_user_patches_no_confirm="true"

#### CONFIG FRAGMENTS ####

_config_fragments="false"
# _config_fragments_no_confirm=""
