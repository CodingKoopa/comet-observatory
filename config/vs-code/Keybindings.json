[
  /////////////////////////////////////////////////////////////////////////////////////////////////
  /// Workbench
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Disable editor picker bindings because opening tabs by how recently they were used can be
  // considered to be undesired behavior.
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  // Remap editor switching bindings to be consistent with tab switching on the rest of the system.
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  // Disable recent file picker bindings.
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  // Remap debug mode restart bindings to be consistent with the new debug binding.
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  /////////////////////////////////////////////////////////////////////////////////////////////////
  /// Git
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Disable save as binding.
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  // Map stage binding.
  {
    "key": "ctrl+shift+s",
    "command": "git.stageSelectedRanges"
  },
  // Map revert binding.
  {
    "key": "ctrl+shift+r",
    "command": "git.revertSelectedRanges"
  },
  /////////////////////////////////////////////////////////////////////////////////////////////////
  /// CMake Tools
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Disable task build binding.
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build"
  },
  // Remap CMake configure binding.
  {
    "key": "shift+f7",
    "command": "-cmake.buildWithTarget"
  },
  {
    "key": "ctrl+shift+b",
    "command": "cmake.outline.configure"
  },
  // Disable sidebar visibility binding.
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  // Remap CMake build binding.
  {
    "key": "f7",
    "command": "-cmake.build"
  },
  {
    "key": "ctrl+b",
    "command": "cmake.build"
  },
  /////////////////////////////////////////////////////////////////////////////////////////////////
  /// Macros
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Remap debug mode start binding.
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
  },
  {
    "key": "ctrl+r",
    "command": "macros.powerRun"
  },
  // Remap debug mode exit bindings.
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop"
  },
  {
    "key": "escape escape",
    "command": "macros.stopDebuggingAndKillTerminal"
  }
]
